<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on andru255</title>
    <link>http://andru255.github.io/blog/posts/</link>
    <description>Recent content in Posts on andru255</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 12 Jan 2019 14:33:59 +0000</lastBuildDate>
    
	<atom:link href="http://andru255.github.io/blog/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Qué es draft content</title>
      <link>http://andru255.github.io/blog/posts/que-es-draft-content/</link>
      <pubDate>Sat, 12 Jan 2019 14:33:59 +0000</pubDate>
      
      <guid>http://andru255.github.io/blog/posts/que-es-draft-content/</guid>
      <description>Hola, en este post, explicaré de qué trata el contenido de tipo draft y qué tan clave es.
Que és el contenido draft? Géstores de contenido como drupal, wordpress y [gohugo]() muestran el estado del artículo en draft cada vez que se crea uno.
Este estado nos indica que es para fines de pre-producción, para revisión, o están a la espera de una aprobación de un grupo, un tercero, etc.</description>
    </item>
    
    <item>
      <title>Cómo usar variables en goHugo</title>
      <link>http://andru255.github.io/blog/posts/como-usar-variables-en-gohugo/</link>
      <pubDate>Sun, 06 Jan 2019 05:06:42 +0000</pubDate>
      
      <guid>http://andru255.github.io/blog/posts/como-usar-variables-en-gohugo/</guid>
      <description>Hola, en este post mostraré una de las piezas fundamentales de gohugo, el qué son y para que son tan útiles en nuestro blog, y se llaman variables1.
Qué son las variables Son aquellas palabras especiales que trae gohugo y contienen valores como la fecha, la info de un post o articulo, etc.
Existen muchos valores que ofrece hugo para que aplique en tu tema o directo en el blog, y puedes visualizarlo aquí</description>
    </item>
    
    <item>
      <title>Como Agregar Syntax Code Highlight</title>
      <link>http://andru255.github.io/blog/posts/como-agregar-syntax-code-highlight/</link>
      <pubDate>Sun, 06 Jan 2019 04:01:36 +0000</pubDate>
      
      <guid>http://andru255.github.io/blog/posts/como-agregar-syntax-code-highlight/</guid>
      <description>Hola, en este tutorial enseñaré a cómo agregar un estilo de resaltar texto dándo el aspecto de código.
Uso de la librería base Edito el archivo ~/mysites/andru255.github.io/themes/hugo-classic/layouts/partials/header.html agregando lo siguiente en la etiqueta head:
 &amp;lt;script src=&amp;quot;//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/highlight.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script&amp;gt;hljs.initHighlightingOnLoad();&amp;lt;/script&amp;gt;  Agregando el estilo al html Edito el archivo ~/mysites/andru255.github.io/themes/hugo-classic/layouts/partials/header.html y preferible antes de la librería base agrego:
En este caso estoy indicando que voy a iniciar con el estilo dracula</description>
    </item>
    
    <item>
      <title>Agregando Favicon</title>
      <link>http://andru255.github.io/blog/posts/agregando-favicon/</link>
      <pubDate>Wed, 02 Jan 2019 01:29:40 +0000</pubDate>
      
      <guid>http://andru255.github.io/blog/posts/agregando-favicon/</guid>
      <description>Hola, en este post mostraré el cómo agregar un favicon a tu blog bajo gohugo, en mi caso hice una imagen de 30x30.
Cómo generarlo Con esta imagen con formato png, lo procesé en esta web para pasarlo a formato ico:
http://www.favicon.cc/
Cómo agregarlo Luego de seguir los pasos indicados en esa dirección, descargará el archivo que necesitamos y lo copio a esta ruta (tomando la carpeta de mi sitio):</description>
    </item>
    
    <item>
      <title>Cómo Usar Fuentes Personalizadas</title>
      <link>http://andru255.github.io/blog/posts/como-usar-fuentes-personalizadas/</link>
      <pubDate>Wed, 02 Jan 2019 00:18:05 +0000</pubDate>
      
      <guid>http://andru255.github.io/blog/posts/como-usar-fuentes-personalizadas/</guid>
      <description>En este post, enseñaré cómo funcionan las fuentes personalizadas en el navegador y luego cómo implementarlo en un tema de hugo.
En este caso elegí fontin sans para los párrafos y al ser un tipo serif en suaves detalles, fácil de leer.
Además, usaré la fuente llamada Butler para los títulos, porque lo veo muy elegante en las portadas.
Qué son los webfonts y para qué sirven? Son aquellas tipografías que no siempre están instaladas en tu equipo, y son visibles a través de un navegador.</description>
    </item>
    
    <item>
      <title>Agregando Imágenes en Gohugo</title>
      <link>http://andru255.github.io/blog/posts/agregando-imagenes-en-gohugo/</link>
      <pubDate>Tue, 01 Jan 2019 02:46:13 +0000</pubDate>
      
      <guid>http://andru255.github.io/blog/posts/agregando-imagenes-en-gohugo/</guid>
      <description>En este post explicaré cómo agregar/quitar imágenes en el contenido de un post con gohugo
Conociendo el folder content La carpeta content contiene todos los posts con extensión .md, y eso es todo :)
Implementando una imagen Creamos una imagen llamada handling-images:
 ~ cd [my-site] ~ hugo new posts/handling-images  Luego, ubico el archivo generado en la ruta correspondiente, por ejemplo a mi me generó en:
 [my-site]/content/posts/handling-images.md  Ahora nos dirijimos a la carpeta posts, y creamos una carpeta con el nombre del post:</description>
    </item>
    
    <item>
      <title>Publica Tu Blog en Github</title>
      <link>http://andru255.github.io/blog/posts/publica-tu-blog-en-github/</link>
      <pubDate>Sat, 29 Dec 2018 23:17:31 +0000</pubDate>
      
      <guid>http://andru255.github.io/blog/posts/publica-tu-blog-en-github/</guid>
      <description>En este post explicaré los pasos a tomar para publicar un blog en html a github
Conociendo Github pages Github pages  es increíble para alojar tu blog, proyectos e incluso experimentos en html, en este caso, creo un nuevo repositorio por la página de github, en mi caso andru255.github.io por el formato que es [my-nickname].github.io
Seguimos las instrucciones que indica github una vez se haya creado nuestro repo, hacemos una prueba clonando y agregamos un archivo con extension .</description>
    </item>
    
    <item>
      <title>Forking The Theme</title>
      <link>http://andru255.github.io/blog/posts/forking-the-theme/</link>
      <pubDate>Sat, 04 Nov 2017 21:38:41 -0500</pubDate>
      
      <guid>http://andru255.github.io/blog/posts/forking-the-theme/</guid>
      <description>Hi!, In this post I will show you a great tip to mantain your personal theme, but, in my case I use the hugo-classic
In many cases, I built some changes on it, and I want to customize more in the future, so I need to fork the original theme for my own maintenance.
Find the origin and fork it I found the repo path with the following commands on my repo:</description>
    </item>
    
    <item>
      <title>Bienvenido</title>
      <link>http://andru255.github.io/blog/posts/bienvenido/</link>
      <pubDate>Sat, 05 Aug 2017 12:17:18 -0500</pubDate>
      
      <guid>http://andru255.github.io/blog/posts/bienvenido/</guid>
      <description>Bienvenido a mi blog, explicaré sobre el cómo llegué a implementarlo
Pre-requisitos  Git  v2.13.0 Una cuenta en github  Si no tienes una, que esperas! Hugo  v0.25.1  Actualmente uso una máquina en lubuntu 16.04
Creando mi sitio web Como standard, voy a trabajar en el directorio /home/, y realizo los siguientes comandos:
~ mkdir mysites ~ cd mysites ~ hugo new site [my-site]  [my-site] crea una carpeta con el nombre que le has puesto, en mi caso lo hice con el nombre andru255.</description>
    </item>
    
  </channel>
</rss>